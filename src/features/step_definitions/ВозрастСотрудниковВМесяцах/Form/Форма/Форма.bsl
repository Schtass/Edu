//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЕстьСотрудникСТабельнымНомером(ТабельныйНомер)","ЕстьСотрудникСТабельнымНомером","Допустим есть сотрудник с табельным номером <ТабельныйНомер>");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ДатаПроверкиРавна(ДатаПроверки)","ДатаПроверкиРавна","И дата проверки равна <ДатаПроверки>");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВозрастСотрудникаВМесяцахДолженБытьРавен(ВозратВМесяцах)","ВозрастСотрудникаВМесяцахДолженБытьРавен","Тогда возраст сотрудника в месяцах должен быть равен <ВозратВМесяцах>");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВозрастСотрудникаВМесяцахБольшеМаксимальноДопустимогоЗначения()","ВозрастСотрудникаВМесяцахБольшеМаксимальноДопустимогоЗначения","И возраст сотрудника в месяцах больше максимально допустимого значения");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВыдатьОшибкуОНеправильномВозрасте()","ВыдатьОшибкуОНеправильномВозрасте","Тогда выдать ошибку о неправильном возрасте");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВозратСотрудникаВМесяцахОтрицательный()","ВозратСотрудникаВМесяцахОтрицательный","И возрат сотрудника в месяцах отрицательный");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Допустим есть сотрудник с табельным номером <ТабельныйНомер>
//@ЕстьСотрудникСТабельнымНомером(ТабельныйНомер)
Процедура ЕстьСотрудникСТабельнымНомером(ТабельныйНомер) Экспорт
	
	Сотрудник = ПолучитьСотрудникаПоТабельномуНомеру(ТабельныйНомер);
	
	Если Сотрудник.Пустая() Тогда 
		
		ВызватьИсключение "Сотрудник с табельным номером " + ТабельныйНомер + " не найден";
		
	КонецЕсли;
	
	Контекст.Вставить("Сотрудник", Сотрудник);
	
КонецПроцедуры

&НаКлиенте
//И дата проверки равна <ДатаПроверки>
//@ДатаПроверкиРавна(ДатаПроверки)
Процедура ДатаПроверкиРавна(ДатаПроверки) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//Тогда возраст сотрудника в месяцах должен быть равен <ВозратВМесяцах>
//@ВозрастСотрудникаВМесяцахДолженБытьРавен(ВозратВМесяцах)
Процедура ВозрастСотрудникаВМесяцахДолженБытьРавен(ВозратВМесяцах) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//И возраст сотрудника в месяцах больше максимально допустимого значения
//@ВозрастСотрудникаВМесяцахБольшеМаксимальноДопустимогоЗначения()
Процедура ВозрастСотрудникаВМесяцахБольшеМаксимальноДопустимогоЗначения() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//Тогда выдать ошибку о неправильном возрасте
//@ВыдатьОшибкуОНеправильномВозрасте()
Процедура ВыдатьОшибкуОНеправильномВозрасте() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//И возрат сотрудника в месяцах отрицательный
//@ВозратСотрудникаВМесяцахОтрицательный()
Процедура ВозратСотрудникаВМесяцахОтрицательный() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

//окончание текста модуля

&НаСервереБезКонтекста
Функция ПолучитьСотрудникаПоТабельномуНомеру(ТабельныйНомер) 
	
	Возврат Справочники.ФизическиеЛица.НайтиПоКоду(ТабельныйНомер);
	
КонецФункции
