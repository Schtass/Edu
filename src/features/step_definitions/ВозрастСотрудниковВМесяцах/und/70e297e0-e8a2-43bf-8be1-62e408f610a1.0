{3,
{42,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0,0,0},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3},0,"","",1,
{21,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{10,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,"",0,0,0,0,0,0,3,3,0,0,0},"//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЕстьСотрудникСТабельнымНомером(ТабельныйНомер)"",""ЕстьСотрудникСТабельнымНомером"",""Допустим есть сотрудник с табельным номером <ТабельныйНомер>"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ДатаПроверкиРавна(ДатаПроверки)"",""ДатаПроверкиРавна"",""И дата проверки равна <ДатаПроверки>"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ВозрастСотрудникаВМесяцахДолженБытьРавен(ВозратВМесяцах)"",""ВозрастСотрудникаВМесяцахДолженБытьРавен"",""Тогда возраст сотрудника в месяцах должен быть равен <ВозратВМесяцах>"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ВозрастСотрудникаВМесяцахБольшеМаксимальноДопустимогоЗначения()"",""ВозрастСотрудникаВМесяцахБольшеМаксимальноДопустимогоЗначения"",""И возраст сотрудника в месяцах больше максимально допустимого значения"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ВыдатьОшибкуОНеправильномВозрасте()"",""ВыдатьОшибкуОНеправильномВозрасте"",""Тогда выдать ошибку о неправильном возрасте"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ВозратСотрудникаВМесяцахОтрицательный()"",""ВозратСотрудникаВМесяцахОтрицательный"",""И возрат сотрудника в месяцах отрицательный"");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Допустим есть сотрудник с табельным номером <ТабельныйНомер>
//@ЕстьСотрудникСТабельнымНомером(ТабельныйНомер)
Процедура ЕстьСотрудникСТабельнымНомером(ТабельныйНомер) Экспорт
	
	Сотрудник = ПолучитьСотрудникаПоТабельномуНомеру(ТабельныйНомер);
	
	Если Сотрудник.Пустая() Тогда 
		
		ВызватьИсключение ""Сотрудник с табельным номером "" + ТабельныйНомер + "" не найден"";
		
	КонецЕсли;
	
	Контекст.Вставить(""Сотрудник"", Сотрудник);
	
КонецПроцедуры

&НаКлиенте
//И дата проверки равна <ДатаПроверки>
//@ДатаПроверкиРавна(ДатаПроверки)
Процедура ДатаПроверкиРавна(ДатаПроверки) Экспорт
	Контекст.Вставить(""ДатаПроверки"", ДатаПроверки);
КонецПроцедуры

&НаКлиенте
//Тогда возраст сотрудника в месяцах должен быть равен <ВозратВМесяцах>
//@ВозрастСотрудникаВМесяцахДолженБытьРавен(ВозратВМесяцах)
Процедура ВозрастСотрудникаВМесяцахДолженБытьРавен(ВозратВМесяцах) Экспорт
	
	Результат = ПолучитьВозратСотрудникаВМесяцахНаДату(Контекст.Сотрудник, Контекст.ДатаПроверки);
	
	Если Результат <> ВозратВМесяцах Тогда 
		
		ВызватьИсключение ""Расчетный возраст ("" +Результат+ "" мес.) не соотвествует ожидаемому значению!"";
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
//И возраст сотрудника в месяцах больше максимально допустимого значения
//@ВозрастСотрудникаВМесяцахБольшеМаксимальноДопустимогоЗначения()
Процедура ВозрастСотрудникаВМесяцахБольшеМаксимальноДопустимогоЗначения() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//Тогда выдать ошибку о неправильном возрасте
//@ВыдатьОшибкуОНеправильномВозрасте()
Процедура ВыдатьОшибкуОНеправильномВозрасте() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//И возрат сотрудника в месяцах отрицательный
//@ВозратСотрудникаВМесяцахОтрицательный()
Процедура ВозратСотрудникаВМесяцахОтрицательный() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

//окончание текста модуля

&НаСервереБезКонтекста
Функция ПолучитьСотрудникаПоТабельномуНомеру(ТабельныйНомер) 
	
	Возврат Справочники.ФизическиеЛица.НайтиПоКоду(ТабельныйНомер);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьВозратСотрудникаВМесяцахНаДату(Сотрудник, Дата) 
	
	Если ТипЗнч(Сотрудник) <> Тип(""СправочникСсылка.ФизическиеЛица"") Тогда 
		
		ВызватьИсключение ""Некорректный тип параметра """"Сотрудник"""": "" + ТипЗнч(Сотрудник);
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр(""Сотрудник"", Сотрудник);
	Запрос.УстановитьПараметр(""Дата""     , Дата     );
	
	Запрос.Текст = 
		""ВЫБРАТЬ
		|	РАЗНОСТЬДАТ(ФизическиеЛица.ДатаРождения, &Дата, МЕСЯЦ) КАК Возраст
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	ФизическиеЛица.Ссылка = &Сотрудник"";
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда 
		
		Возврат Выборка.Возраст;
		
	КонецЕсли;
	
	ВызватьИсключение ""Неизвестная ошибка расчета возраста для сотрудника: "" + Сотрудник;
	
КонецФункции
",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",1fa267af-3d54-4f70-ac00-718486d7aafd}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}